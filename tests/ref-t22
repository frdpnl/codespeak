# ----line: "define dec (a,) ; a - 1 ; end dec"
# --phrase: define dec (a,)  ; a - 1  ; end dec ; 
#   0  expr: define dec (a,) 
#   0  seme: ( define dec { a } ) 
#   0 value: ( `define 'dec { 'a } ) 
#   0 interp: [Fun , `(dec ('a ) 0 val)  ]
#   1  expr: a - 1 
#   1  seme: ( a - 1N ) 
#   1 value: ( 'a `- 1 ) 
#   1 interp: [Fun , `(dec ('a ) 1 val)  ]
#   2  expr: end dec
#   2  seme: ( end dec ) 
#   2 value: ( `end 'dec ) 
#   2 interp: [Ok , `(dec ('a ) 1 val)  ]
Ok 
it = `(dec ('a ) 1 val) 
dec = `(dec ('a ) 1 val) 
# ----line: "dec (,)"
# --phrase: dec (,) ; 
#   0  expr: dec (,)
#   0  seme: ( dec { Nil } ) 
#   0 value: ( `(dec ('a ) 1 val) { Nil } ) 
- interp_fun value: ( 'a `- 1 ) 
? interp_min: arguments not numbers
- interp_fun interp: [Fatal , null ]
#   0 interp: [Fatal , null ]
