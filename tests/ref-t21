> input: "define dec (a,) ; a - 1 ; end dec"
# phrase: define dec (a,)  ; a - 1  ; end dec ; 
#   0   expr: define dec (a,) 
#   0   seme: ( define dec { a } ) 
#   0  value: ( 'define 'dec { 'a } ) 
##  reduce_items (0) entry: ( 'define 'dec { 'a } ) 
##  reduce_items (0) entry: { 'a } 
##  reduce_items (0) exit: from { 'a } 
##  reduce_items (0) ...   to { 'a } 
##  reduce_items (0) exit: from ( 'define 'dec { 'a } ) 
##  reduce_items (0) ...   to ( `define 'dec { 'a } ) 
##  interp_seq (0) entry: ( `define 'dec { 'a } ) 
##  interp_seq resolved: ( `define 'dec { 'a } ) 
##  reduce_items (0) entry: { 'a } 
##  reduce_items (0) exit: from { 'a } 
##  reduce_items (0) ...   to { 'a } 
##  interp_seq reduced: ( `(dec ('a ) x0 = ) ) 
#   0 reduce: [Fun , `(dec ('a ) x0 = )  ]
#   0 env:
# env:
#	state: Fun 
#	it = `(dec ('a ) x0 = ) 
#   1   expr: a - 1 
#   1   seme: ( a - 1N ) 
#   1  value: ( 'a '- 1 ) 
##  reduce_items (0) entry: ( 'a '- 1 ) 
##  reduce_items (0) exit: from ( 'a '- 1 ) 
##  reduce_items (0) ...   to ( 'a `- 1 ) 
##  interp_seq (0) entry: ( 'a `- 1 ) 
#   1 reduce: [Fun , `(dec ('a ) x1 = ( 'a `- 1 ) )  ]
#   1 env:
# env:
#	state: Fun 
#	it = `(dec ('a ) x1 = ( 'a `- 1 ) ) 
#   2   expr: end dec
#   2   seme: ( end dec ) 
#   2  value: ( 'end 'dec ) 
##  reduce_items (0) entry: ( 'end 'dec ) 
##  reduce_items (0) exit: from ( 'end 'dec ) 
##  reduce_items (0) ...   to ( `end 'dec ) 
##  interp_seq (0) entry: ( `end 'dec ) 
##  interp_seq resolved: ( `end 'dec ) 
##  interp_seq reduced: ( `(dec ('a ) x1 = ( 'a `- 1 ) ) ) 
#   2 reduce: [Ok , `(dec ('a ) x1 = ( 'a `- 1 ) )  ]
#   2 env:
# env:
#	state: Ok 
#	it = `(dec ('a ) x1 = ( 'a `- 1 ) ) 
#	dec = `(dec ('a ) x1 = ( 'a `- 1 ) ) 
> input: "dec ()"
# phrase: dec () ; 
#   0   expr: dec ()
#   0   seme: ( dec Nil ) 
#   0  value: ( 'dec Nil ) 
##  reduce_items (0) entry: ( 'dec Nil ) 
##  reduce_items (0) exit: from ( 'dec Nil ) 
##  reduce_items (0) ...   to ( 'dec Nil ) 
##  interp_seq (0) entry: ( 'dec Nil ) 
##  interp_seq resolved: ( `(dec ('a ) x1 = ( 'a `- 1 ) ) Nil ) 
? reduce_fun: expected argument to `dec
#   0 reduce: [Fatal , null ]
