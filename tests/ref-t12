> input: "call, 23, n; do it;"
# phrase: call, 23, n ; do it ; 
#   0   expr: call, 23, n
#   0   seme: { call 23N n } 
#   0  value: { 'call 23 'n } 
##  reduce_items (0) entry: { 'call 23 'n } 
##  reduce_items (0) exit: from { 'call 23 'n } 
##  reduce_items (0) ...   to { `call 23 'n } 
#   0 reduce: [Ok , { `call 23 'n }  ]
#   0 env:
# env:
#	state: Ok 
#	it = { `call 23 'n } 
#   1   expr: do it
#   1   seme: ( do it ) 
#   1  value: ( 'do 'it ) 
##  reduce_items (0) entry: ( 'do 'it ) 
##  reduce_items (0) exit: from ( 'do 'it ) 
##  reduce_items (0) ...   to ( `do 'it ) 
##  interp_seq (0) entry: ( `do 'it ) 
##  interp_seq resolved: ( `do { `call 23 'n } ) 
##  reduce_items (0) entry: { `call 23 'n } 
##  reduce_items (0) exit: from { `call 23 'n } 
##  reduce_items (0) ...   to { `call 23 'n } 
##  reduce_items (0) entry: ( `call 23 'n ) 
##  reduce_items (0) exit: from ( `call 23 'n ) 
##  reduce_items (0) ...   to ( `call 23 'n ) 
##  interp_seq (0) entry: ( `call 23 'n ) 
##  interp_seq resolved: ( `call 23 'n ) 
##  interp_seq reduced: ( 23 ) 
##  interp_seq reduced: ( 23 ) 
#   1 reduce: [Ok , 23  ]
#   1 env:
# env:
#	state: Ok 
#	it = 23 
#	n = 23 
> exit
> env:
>	state: Ok 
>	it = 23 
>	n = 23 
