> input: "def a* (a,) "
> input: "	def f (x,) ; a * x ; end f"
> input: "end a*"
> input: "a* (-1,) ; call it opposite"
> input: "opposite (2,) ; print it"
-2 
> exit
> env:
>	state: Ok 
>	it = -2 
>	a* = `(a* ('a )x3= ( `def 'f { 'x } ) ( 'a `* 'x ) ( `end 'f ) ) 
>	opposite = `(f ('x )x1= ( -1 `* 'x ) ) 
