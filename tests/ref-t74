> input: "def f () ; 1 ; end f"
> input: "env"
> env:
> state: Ok 
> __it__ = 
> `f () [1]:
>    ( 1 ) 
> __nested_loops__ = 0 
> f = 
> `f () [1]:
>    ( 1 ) 
> input: "call f f2"
> input: "env"
> env:
> state: Ok 
> __it__ = 
> `f () [1]:
>    ( 1 ) 
> __nested_loops__ = 0 
> f = 
> `f () [1]:
>    ( 1 ) 
> f2 = 
> `f () [1]:
>    ( 1 ) 
> input: "f = f2"
? reduce_fun: argument to `f not a list or '()'
