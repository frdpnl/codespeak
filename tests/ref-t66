> input: "def f (a,)"
> input: "	if a > 0 ; def g () ; a ; end g ; return"
> input: "	else ; def g () ; -1 * a ; end g ; "
> input: "	end if"
> input: "	g"
> input: "end f"
> input: "f (-2,) ; it ; it () ; print it"
2 
> input: "f (3,) ; it () ; print it"
3 
> env:
> state: Ok 
> __it__ = 3 
> __nested_loops__ = 0 
> f = 
> `f ('a ) [11]:
>    ( `if 'a `> 0 ) 
>    ( `def 'g Nil ) 
>    ( 'a ) 
>    ......
>    ( `end `if ) 
>    ( 'g ) 
> bye!
