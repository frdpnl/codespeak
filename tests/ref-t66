> input: "def f (a,)"
> input: "	if a > 0 ; def g () ; a ; end g ; return"
> input: "	else ; def g () ; -1 * a ; end g ; "
> input: "	end if"
> input: "	g"
> input: "end f"
> input: "f (-2,) ; it ; it () ; print it"
2 
> input: "f (3,) ; it () ; print it"
3 
> exit
> env:
>	state: Ok 
>	__loop_nest__ = 0 
>	it = 3 
>	f = `(f 'a [11] ( `if 'a `> 0 ) ( `def 'g Nil ) ( 'a ) ......( `end `if ) ( 'g ) ) 
