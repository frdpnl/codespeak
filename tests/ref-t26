> input: "define f () ; 1 ; end"
# phrase: define f ()  ; 1  ; end ; 
#   0   expr: define f () 
#   0   seme: ( define f Nil ) 
#   0  value: ( 'define 'f Nil ) 
##  reduce_items (0) entry: ( 'define 'f Nil ) 
##  interp_seq (0) entry: ( `define 'f Nil ) 
##  interp_seq resolved: ( `define 'f Nil ) 
##  interp_seq reduced: ( `(f () =0= ) ) 
#   0 reduce: [Fun , `(f () =0= )  ]
#   0 env:
# env:
#	state: Fun 
#	it = `(f () =0= ) 
#   1   expr: 1 
#   1   seme: ( 1N ) 
#   1  value: ( 1 ) 
##  reduce_items (0) entry: ( 1 ) 
##  interp_seq (0) entry: ( 1 ) 
#   1 reduce: [Fun , `(f () =1= ( 1 ) )  ]
#   1 env:
# env:
#	state: Fun 
#	it = `(f () =1= ( 1 ) ) 
#   2   expr: end
#   2   seme: ( end ) 
#   2  value: ( 'end ) 
##  reduce_items (0) entry: ( 'end ) 
##  interp_seq (0) entry: ( `end ) 
#   2 reduce: [Fun , `(f () =2= ( 1 ) ( `end ) )  ]
#   2 env:
# env:
#	state: Fun 
#	it = `(f () =2= ( 1 ) ( `end ) ) 
> input: "f ()"
# phrase: f () ; 
#   0   expr: f ()
#   0   seme: ( f Nil ) 
#   0  value: ( 'f Nil ) 
##  reduce_items (0) entry: ( 'f Nil ) 
##  interp_seq (0) entry: ( 'f Nil ) 
#   0 reduce: [Fun , `(f () =3= ( 1 ) ( `end ) ( 'f Nil ) )  ]
#   0 env:
# env:
#	state: Fun 
#	it = `(f () =3= ( 1 ) ( `end ) ( 'f Nil ) ) 
? main: unexpected end of program
> main: exit
> env:
>	state: Fun 
>	it = `(f () =3= ( 1 ) ( `end ) ( 'f Nil ) ) 
