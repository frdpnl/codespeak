> input: "call, 23, n ; call it L"
# phrase: call, 23, n  ; call it L ; 
#   0   expr: call, 23, n 
#   0   seme: { call 23N n } 
#   0  value: { 'call 23 'n } 
##  reduce_items (0) entry: { 'call 23 'n } 
##  reduce_items (0) exit: from { 'call 23 'n } 
##  reduce_items (0) ...   to { `call 23 'n } 
#   0 reduce: [Ok , { `call 23 'n }  ]
#   0 env:
# env:
#	state: Ok 
#	it = { `call 23 'n } 
#   1   expr: call it L
#   1   seme: ( call it L ) 
#   1  value: ( 'call 'it 'L ) 
##  reduce_items (0) entry: ( 'call 'it 'L ) 
##  reduce_items (0) exit: from ( 'call 'it 'L ) 
##  reduce_items (0) ...   to ( `call 'it 'L ) 
##  interp_seq (0) entry: ( `call 'it 'L ) 
##  interp_seq resolved: ( `call { `call 23 'n } 'L ) 
##  reduce_items (1) entry: { `call 23 'n } 
? interp: unknown symbol 'n'
? reduce_prefix2_arg: 1st argument is null
#   1 reduce: [Fatal , null ]
