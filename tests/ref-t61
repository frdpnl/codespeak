> input: "def f (a,b) ; end 3"
# phrase: def f (a,b)  ; end 3 ; 
#   0   expr: def f (a,b) 
#   0   seme: ( def f { a b } ) 
#   0  value: ( 'def 'f { 'a 'b } ) 
##  reduce_items (0) entry: ( 'def 'f { 'a 'b } ) 
##  reduce_items (0) entry: { 'a 'b } 
##  interp_seq (0) entry: ( `def 'f { 'a 'b } ) 
##  interp_seq resolved: ( `def 'f { 'a 'b } ) 
##  reduce_items (0) entry: { 'a 'b } 
##  interp_seq reduced: ( `(f ('a 'b ) =0= ) ) 
#   0 reduce: [Fun , `(f ('a 'b ) =0= )  ]
#   0 env:
# env:
#	state: Fun 
#	it = `(f ('a 'b ) =0= ) 
#   1   expr: end 3
#   1   seme: ( end 3N ) 
#   1  value: ( 'end 3 ) 
##  reduce_items (0) entry: ( 'end 3 ) 
##  interp_seq (0) entry: ( `end 3 ) 
##  interp_seq resolved: ( `end 3 ) 
? reduce_end: 'end' with wrong argument type
#   1 reduce: [Fatal , null ]
