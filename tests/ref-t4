> input: "n; call it p "
# phrase: n ; call it p  ; 
#   0   expr: n
#   0   seme: ( n ) 
#   0  value: ( 'n ) 
##  reduce_items (0) entry: ( 'n ) 
##  reduce_items (0) exit: from ( 'n ) 
##  reduce_items (0) ...   to ( 'n ) 
##  interp_seq (0) entry: ( 'n ) 
##  interp_seq resolved: ( 'n ) 
#   0 reduce: [Ok , 'n  ]
#   0 env:
# env:
#	state: Ok 
#	it = 'n 
#   1   expr: call it p 
#   1   seme: ( call it p ) 
#   1  value: ( 'call 'it 'p ) 
##  reduce_items (0) entry: ( 'call 'it 'p ) 
##  reduce_items (0) exit: from ( 'call 'it 'p ) 
##  reduce_items (0) ...   to ( `call 'it 'p ) 
##  interp_seq (0) entry: ( `call 'it 'p ) 
##  interp_seq resolved: ( `call 'n 'p ) 
? interp: unknown symbol 'n'
? reduce_prefix2_arg: 1st argument is null
#   1 reduce: [Fatal , null ]
