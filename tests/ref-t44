> input: "def f (a,) "
> input: "	def g () ; 2 ; end g"
> input: "end f"
> input: "f (3,) ; call it f3"
> input: "f3 () ; print it"
2 
> input: "call (f (4,)) f4 "
> input: "it ; print it"
`(g [1] ( 2 ) ) 
> input: "it () ; print it"
2 
> exit
> env:
>	state: Ok 
>	__nested_loops__ = 0 
>	__it__ = 2 
>	f = `(f 'a [3] ( `def 'g Nil ) ( 2 ) ( `end 'g ) ) 
>	f3 = `(g [1] ( 2 ) ) 
>	f4 = `(g [1] ( 2 ) ) 
